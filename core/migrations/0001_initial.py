# Generated by Django 5.1.7 on 2025-06-16 10:31

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nivel', models.CharField(choices=[('admin', 'Admin'), ('gestor', 'Gestor'), ('vendedor', 'Vendedor'), ('compras', 'Compras'), ('engenharia', 'Engenharia')], max_length=20)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('codigo_loja', models.CharField(blank=True, help_text='Código de 3 dígitos da loja', max_length=3, null=True)),
                ('codigo_vendedor', models.CharField(blank=True, help_text='Código de 3 dígitos do vendedor', max_length=3, null=True)),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_pessoa', models.CharField(choices=[('PF', 'Pessoa Física'), ('PJ', 'Pessoa Jurídica')], max_length=2, verbose_name='Tipo de Pessoa')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome/Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=200, verbose_name='Nome Fantasia')),
                ('cpf_cnpj', models.CharField(blank=True, help_text='Digite apenas números ou use a formatação padrão', max_length=18, verbose_name='CPF/CNPJ')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('contato_principal', models.CharField(blank=True, max_length=100, verbose_name='Contato Principal')),
                ('cep', models.CharField(blank=True, max_length=10, verbose_name='CEP')),
                ('endereco', models.CharField(blank=True, max_length=200, verbose_name='Logradouro')),
                ('numero', models.CharField(blank=True, max_length=20, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, max_length=2, verbose_name='Estado')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('atualizado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='clientes_atualizados', to=settings.AUTH_USER_MODEL)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clientes_criados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='EspecificacaoElevador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('tipo', models.CharField(choices=[('categoria', 'Categoria'), ('material', 'Material'), ('acabamento', 'Acabamento'), ('dimensao', 'Dimensão'), ('capacidade', 'Capacidade'), ('velocidade', 'Velocidade'), ('paradas', 'Número de Paradas'), ('opcional', 'Opcional')], max_length=20, verbose_name='Tipo')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('obrigatoria', models.BooleanField(default=True, verbose_name='Obrigatória')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem de Apresentação')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Especificação de Elevador',
                'verbose_name_plural': 'Especificações de Elevadores',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(max_length=200)),
                ('nome_fantasia', models.CharField(blank=True, max_length=200)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True)),
                ('contato_principal', models.CharField(blank=True, max_length=100)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('endereco', models.TextField(blank=True, verbose_name='Endereço')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fornecedores_criados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'ordering': ['razao_social'],
            },
        ),
        migrations.CreateModel(
            name='GrupoProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True, verbose_name='Código')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('tipo_produto', models.CharField(choices=[('MP', 'Matéria Prima'), ('PI', 'Produto Intermediário'), ('PA', 'Produto Acabado')], default='MP', max_length=2, verbose_name='Tipo de Produto')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos_produtos_criados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grupo de Produto',
                'verbose_name_plural': 'Grupos de Produtos',
                'ordering': ['codigo', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='OpcaoEspecificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, verbose_name='Código')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('valor_numerico', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Numérico')),
                ('unidade', models.CharField(blank=True, max_length=10, verbose_name='Unidade')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('motivo_bloqueio', models.TextField(blank=True, verbose_name='Motivo do Bloqueio')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('especificacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opcoes', to='core.especificacaoelevador')),
            ],
            options={
                'verbose_name': 'Opção de Especificação',
                'verbose_name_plural': 'Opções de Especificações',
                'ordering': ['especificacao__ordem', 'ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ParametrosGerais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(max_length=200, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=200)),
                ('cnpj', models.CharField(blank=True, max_length=18)),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20)),
                ('endereco', models.CharField(blank=True, max_length=200)),
                ('numero', models.CharField(blank=True, max_length=20)),
                ('complemento', models.CharField(blank=True, max_length=100)),
                ('bairro', models.CharField(blank=True, max_length=100)),
                ('cidade', models.CharField(blank=True, max_length=100)),
                ('estado', models.CharField(blank=True, max_length=2)),
                ('cep', models.CharField(blank=True, max_length=10)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('comprador_responsavel', models.CharField(blank=True, help_text='Nome do responsável pelas compras', max_length=100, verbose_name='Comprador Responsável')),
                ('contato_compras', models.CharField(blank=True, help_text='Email ou telefone do setor de compras', max_length=100, verbose_name='Contato de Compras')),
                ('margem_padrao', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('comissao_padrao', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('desconto_alcada_1', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('desconto_alcada_2', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('faturamento_elevadores', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('faturamento_fuza', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('faturamento_manutencao', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('atualizado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='parametros_atualizados', to=settings.AUTH_USER_MODEL)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='parametros_criados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parâmetros Gerais',
                'verbose_name_plural': 'Parâmetros Gerais',
                'db_table': 'parametros_gerais',
            },
        ),
        migrations.CreateModel(
            name='PedidoCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número')),
                ('data_emissao', models.DateField(default=datetime.date.today, help_text='Data de emissão do pedido', verbose_name='Data de Emissão')),
                ('prazo_entrega', models.IntegerField(default=7, help_text='Prazo de entrega em dias úteis', verbose_name='Prazo de Entrega (dias)')),
                ('data_entrega_prevista', models.DateField(blank=True, help_text='Calculada automaticamente com base na data de emissão + prazo', null=True, verbose_name='Data Entrega Prevista')),
                ('data_entrega_real', models.DateField(blank=True, null=True, verbose_name='Data Entrega Real')),
                ('comprador_responsavel', models.CharField(blank=True, help_text='Preenchido automaticamente dos parâmetros', max_length=100, verbose_name='Comprador Responsável')),
                ('contato_compras', models.CharField(blank=True, help_text='Preenchido automaticamente dos parâmetros', max_length=100, verbose_name='Contato de Compras')),
                ('status', models.CharField(choices=[('RASCUNHO', 'Rascunho'), ('ENVIADO', 'Enviado'), ('CONFIRMADO', 'Confirmado'), ('PARCIAL', 'Parcialmente Recebido'), ('RECEBIDO', 'Recebido'), ('CANCELADO', 'Cancelado')], default='RASCUNHO', max_length=15)),
                ('prioridade', models.CharField(choices=[('BAIXA', 'Baixa'), ('NORMAL', 'Normal'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='NORMAL', max_length=10)),
                ('valor_total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Valor Total')),
                ('desconto_percentual', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Desconto %')),
                ('desconto_valor', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Desconto R$')),
                ('valor_frete', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Valor Frete')),
                ('valor_final', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Valor Final')),
                ('condicao_pagamento', models.CharField(blank=True, max_length=100, verbose_name='Condição de Pagamento')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('observacoes_internas', models.TextField(blank=True, verbose_name='Observações Internas')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('atualizado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pedidos_compra_atualizados', to=settings.AUTH_USER_MODEL)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pedidos_compra_criados', to=settings.AUTH_USER_MODEL)),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pedidos_compra', to='core.fornecedor')),
            ],
            options={
                'verbose_name': 'Pedido de Compra',
                'verbose_name_plural': 'Pedidos de Compra',
                'ordering': ['-data_emissao', '-numero'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoPedidoCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_alteracao', models.DateTimeField(auto_now_add=True)),
                ('acao', models.CharField(max_length=100, verbose_name='Ação')),
                ('observacao', models.TextField(blank=True, verbose_name='Observação')),
                ('dados_anteriores', models.JSONField(blank=True, default=dict)),
                ('dados_novos', models.JSONField(blank=True, default=dict)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='core.pedidocompra')),
            ],
            options={
                'verbose_name': 'Histórico do Pedido',
                'verbose_name_plural': 'Histórico dos Pedidos',
                'ordering': ['-data_alteracao'],
            },
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('nivel', models.CharField(choices=[('admin', 'Admin'), ('gestor', 'Gestor'), ('vendedor', 'Vendedor'), ('compras', 'Compras'), ('engenharia', 'Engenharia')], default='vendedor', max_length=20)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Usuário',
                'verbose_name_plural': 'Perfis de Usuários',
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('MP', 'Matéria Prima'), ('PI', 'Produto Intermediário'), ('PA', 'Produto Acabado')], max_length=2, verbose_name='Tipo')),
                ('especificacoes_tecnicas', models.JSONField(blank=True, default=dict, help_text='Especificações técnicas em formato flexível', verbose_name='Especificações Técnicas')),
                ('unidade_medida', models.CharField(choices=[('UN', 'Unidade'), ('KG', 'Quilograma'), ('MT', 'Metro'), ('M2', 'Metro Quadrado'), ('M3', 'Metro Cúbico'), ('PC', 'Peça'), ('CJ', 'Conjunto')], max_length=3, verbose_name='Unidade')),
                ('peso_unitario', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Peso (kg)')),
                ('dimensoes', models.JSONField(blank=True, default=dict, help_text='Dimensões: altura, largura, profundidade, diâmetro, etc.')),
                ('controla_estoque', models.BooleanField(default=True, verbose_name='Controla Estoque')),
                ('estoque_minimo', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Estoque Mínimo')),
                ('estoque_atual', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Estoque Atual')),
                ('custo_medio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Custo Médio')),
                ('preco_venda', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preço Venda')),
                ('margem_padrao', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Margem Padrão (%)')),
                ('prazo_entrega_padrao', models.IntegerField(blank=True, null=True, verbose_name='Prazo Entrega (dias)')),
                ('status', models.CharField(choices=[('ATIVO', 'Ativo'), ('INATIVO', 'Inativo'), ('DESCONTINUADO', 'Descontinuado')], default='ATIVO', max_length=15)),
                ('disponivel', models.BooleanField(default=True, verbose_name='Disponível para Uso')),
                ('motivo_indisponibilidade', models.TextField(blank=True, verbose_name='Motivo Indisponibilidade')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('atualizado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='produtos_atualizados', to=settings.AUTH_USER_MODEL)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='produtos_criados', to=settings.AUTH_USER_MODEL)),
                ('fornecedor_principal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='produtos_principal', to='core.fornecedor')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='produtos', to='core.grupoproduto', verbose_name='Grupo')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='ItemPedidoCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantidade')),
                ('unidade', models.CharField(max_length=10, verbose_name='Unidade')),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitário')),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor Total')),
                ('quantidade_recebida', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Quantidade Recebida')),
                ('data_recebimento', models.DateTimeField(blank=True, null=True, verbose_name='Data Recebimento')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.pedidocompra')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='itens_pedido_compra', to='core.produto')),
            ],
            options={
                'verbose_name': 'Item do Pedido de Compra',
                'verbose_name_plural': 'Itens dos Pedidos de Compra',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='FornecedorProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_fornecedor', models.CharField(blank=True, help_text='Código que o fornecedor usa para este produto', max_length=50, verbose_name='Código do Fornecedor')),
                ('preco_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço Unitário')),
                ('prioridade', models.IntegerField(choices=[(1, 'Principal'), (2, 'Secundário'), (3, 'Terceiro'), (4, 'Backup')], default=2, verbose_name='Prioridade')),
                ('prazo_entrega', models.IntegerField(blank=True, null=True, verbose_name='Prazo Entrega (dias)')),
                ('quantidade_minima', models.DecimalField(decimal_places=2, default=1, max_digits=10, verbose_name='Quantidade Mínima')),
                ('observacoes', models.TextField(blank=True, help_text='Condições especiais, descontos, etc.', verbose_name='Observações')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('ultima_cotacao', models.DateTimeField(blank=True, null=True, verbose_name='Última Cotação')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fornecedor_produto_criados', to=settings.AUTH_USER_MODEL)),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produtos_fornecedor', to='core.fornecedor')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fornecedores_produto', to='core.produto')),
            ],
            options={
                'verbose_name': 'Fornecedor do Produto',
                'verbose_name_plural': 'Fornecedores dos Produtos',
                'ordering': ['prioridade', '-ativo', 'fornecedor__razao_social'],
            },
        ),
        migrations.CreateModel(
            name='EstruturaProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='Quantidade')),
                ('unidade', models.CharField(choices=[('UN', 'Unidade'), ('KG', 'Quilograma'), ('MT', 'Metro'), ('M2', 'Metro Quadrado'), ('M3', 'Metro Cúbico'), ('PC', 'Peça'), ('CJ', 'Conjunto')], max_length=3)),
                ('formula_quantidade', models.TextField(blank=True, help_text="Fórmula para cálculo dinâmico da quantidade (ex: 'altura * 2 + 0.5')")),
                ('percentual_perda', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='% Perda')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('produto_filho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usado_em', to='core.produto')),
                ('produto_pai', models.ForeignKey(limit_choices_to={'tipo__in': ['PI', 'PA']}, on_delete=django.db.models.deletion.CASCADE, related_name='componentes', to='core.produto')),
            ],
            options={
                'verbose_name': 'Estrutura do Produto',
                'verbose_name_plural': 'Estruturas dos Produtos',
            },
        ),
        migrations.CreateModel(
            name='ComponenteDerivado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_calculo', models.CharField(choices=[('proporcional', 'Proporcional'), ('fixo', 'Valor Fixo'), ('formula', 'Fórmula')], default='proporcional', max_length=20)),
                ('multiplicador', models.DecimalField(decimal_places=4, default=1.0, max_digits=10, verbose_name='Multiplicador')),
                ('formula', models.TextField(blank=True, verbose_name='Fórmula Personalizada')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('componente_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='origem_derivacao', to='core.produto', verbose_name='Componente Destino')),
                ('componente_origem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='derivados', to='core.produto', verbose_name='Componente Origem')),
            ],
            options={
                'verbose_name': 'Componente Derivado',
                'verbose_name_plural': 'Componentes Derivados',
            },
        ),
        migrations.CreateModel(
            name='Proposta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número da Proposta')),
                ('nome_projeto', models.CharField(max_length=200, verbose_name='Nome do Projeto')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('simulado', 'Simulado'), ('proposta_gerada', 'Proposta Gerada'), ('enviado_cliente', 'Enviado ao Cliente'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('em_producao', 'Em Produção'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='rascunho', max_length=20)),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('data_validade', models.DateField(blank=True, help_text='Data até quando a proposta é válida', null=True, verbose_name='Validade da Proposta')),
                ('prazo_entrega_dias', models.PositiveIntegerField(default=45, help_text='Prazo em dias corridos para entrega após aprovação', verbose_name='Prazo de Entrega (dias)')),
                ('faturado_por', models.CharField(choices=[('Elevadores', 'Elevadores'), ('Fuza', 'Fuza'), ('Manutenção', 'Manutenção')], default='Elevadores', max_length=20, verbose_name='Faturado por')),
                ('forma_pagamento', models.CharField(choices=[('vista', 'À Vista'), ('parcelado', 'Parcelado'), ('entrada_parcelas', 'Entrada + Parcelas'), ('financiamento', 'Financiamento'), ('leasing', 'Leasing')], default='parcelado', max_length=20, verbose_name='Forma de Pagamento')),
                ('valor_entrada', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da Entrada')),
                ('percentual_entrada', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Percentual da Entrada (%)')),
                ('data_vencimento_entrada', models.DateField(blank=True, null=True, verbose_name='Vencimento da Entrada')),
                ('numero_parcelas', models.PositiveIntegerField(default=1, verbose_name='Número de Parcelas')),
                ('valor_parcela', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da Parcela')),
                ('tipo_parcela', models.CharField(choices=[('mensal', 'Mensal'), ('bimestral', 'Bimestral'), ('trimestral', 'Trimestral'), ('semestral', 'Semestral'), ('anual', 'Anual'), ('personalizado', 'Personalizado')], default='mensal', max_length=15, verbose_name='Tipo de Parcela')),
                ('primeira_parcela', models.DateField(blank=True, null=True, verbose_name='Vencimento da 1ª Parcela')),
                ('modelo_elevador', models.CharField(choices=[('Passageiro', 'Passageiro'), ('Carga', 'Carga'), ('Monta Prato', 'Monta Prato'), ('Plataforma Acessibilidade', 'Plataforma Acessibilidade')], max_length=50, verbose_name='Modelo do Elevador')),
                ('capacidade', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Capacidade (kg)')),
                ('capacidade_pessoas', models.IntegerField(blank=True, null=True, verbose_name='Capacidade (pessoas)')),
                ('acionamento', models.CharField(choices=[('Motor', 'Motor'), ('Hidraulico', 'Hidráulico'), ('Carretel', 'Carretel')], max_length=20, verbose_name='Acionamento')),
                ('tracao', models.CharField(blank=True, choices=[('1x1', '1x1'), ('2x1', '2x1')], max_length=10, verbose_name='Tração')),
                ('contrapeso', models.CharField(blank=True, choices=[('Traseiro', 'Traseiro'), ('Lateral', 'Lateral')], max_length=20, verbose_name='Contrapeso')),
                ('largura_poco', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Largura do Poço (m)')),
                ('comprimento_poco', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Comprimento do Poço (m)')),
                ('altura_poco', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Altura do Poço (m)')),
                ('pavimentos', models.IntegerField(verbose_name='Número de Pavimentos')),
                ('modelo_porta_cabine', models.CharField(choices=[('Automática', 'Automática'), ('Pantográfica', 'Pantográfica'), ('Pivotante', 'Pivotante'), ('Guilhotina', 'Guilhotina'), ('Camarão', 'Camarão'), ('Cancela', 'Cancela'), ('Rampa', 'Rampa')], max_length=20, verbose_name='Modelo Porta Cabine')),
                ('material_porta_cabine', models.CharField(choices=[('Inox', 'Inox'), ('Chapa Pintada', 'Chapa Pintada'), ('Alumínio', 'Alumínio'), ('Outro', 'Outro')], max_length=50, verbose_name='Material Porta Cabine')),
                ('material_porta_cabine_outro', models.CharField(blank=True, max_length=100, verbose_name='Material Porta Cabine (Outro)')),
                ('valor_porta_cabine_outro', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Material Porta Cabine (Outro)')),
                ('folhas_porta_cabine', models.CharField(blank=True, choices=[('2', '2'), ('3', '3'), ('Central', 'Central')], max_length=10, verbose_name='Folhas Porta Cabine')),
                ('largura_porta_cabine', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Largura Porta Cabine (m)')),
                ('altura_porta_cabine', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Altura Porta Cabine (m)')),
                ('modelo_porta_pavimento', models.CharField(choices=[('Automática', 'Automática'), ('Pantográfica', 'Pantográfica'), ('Pivotante', 'Pivotante'), ('Guilhotina', 'Guilhotina'), ('Camarão', 'Camarão'), ('Cancela', 'Cancela'), ('Rampa', 'Rampa')], max_length=20, verbose_name='Modelo Porta Pavimento')),
                ('material_porta_pavimento', models.CharField(choices=[('Inox', 'Inox'), ('Chapa Pintada', 'Chapa Pintada'), ('Alumínio', 'Alumínio'), ('Outro', 'Outro')], max_length=50, verbose_name='Material Porta Pavimento')),
                ('material_porta_pavimento_outro', models.CharField(blank=True, max_length=100, verbose_name='Material Porta Pavimento (Outro)')),
                ('valor_porta_pavimento_outro', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Material Porta Pavimento (Outro)')),
                ('folhas_porta_pavimento', models.CharField(blank=True, choices=[('2', '2'), ('3', '3'), ('Central', 'Central')], max_length=10, verbose_name='Folhas Porta Pavimento')),
                ('largura_porta_pavimento', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Largura Porta Pavimento (m)')),
                ('altura_porta_pavimento', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Altura Porta Pavimento (m)')),
                ('material_cabine', models.CharField(choices=[('Inox 430', 'Inox 430'), ('Inox 304', 'Inox 304'), ('Chapa Pintada', 'Chapa Pintada'), ('Alumínio', 'Alumínio'), ('Outro', 'Outro')], max_length=50, verbose_name='Material da Cabine')),
                ('material_cabine_outro', models.CharField(blank=True, max_length=100, verbose_name='Material da Cabine (Outro)')),
                ('valor_cabine_outro', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Material da Cabine (Outro)')),
                ('espessura_cabine', models.CharField(choices=[('1,2', '1,2 mm'), ('1,5', '1,5 mm'), ('2,0', '2,0 mm')], max_length=10, verbose_name='Espessura')),
                ('saida_cabine', models.CharField(choices=[('Padrão', 'Padrão'), ('Oposta', 'Oposta')], max_length=20, verbose_name='Saída')),
                ('altura_cabine', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Altura da Cabine (m)')),
                ('piso_cabine', models.CharField(choices=[('Por conta do cliente', 'Por conta do cliente'), ('Por conta da empresa', 'Por conta da empresa')], max_length=50, verbose_name='Piso')),
                ('material_piso_cabine', models.CharField(blank=True, choices=[('Antiderrapante', 'Antiderrapante'), ('Outro', 'Outro')], max_length=50, verbose_name='Material do Piso')),
                ('material_piso_cabine_outro', models.CharField(blank=True, max_length=100, verbose_name='Material do Piso (Outro)')),
                ('valor_piso_cabine_outro', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Material do Piso (Outro)')),
                ('largura_cabine_calculada', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Largura Cabine Calculada (m)')),
                ('comprimento_cabine_calculado', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Comprimento Cabine Calculado (m)')),
                ('capacidade_cabine_calculada', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Capacidade Cabine Calculada (kg)')),
                ('tracao_cabine_calculada', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tração Cabine Calculada (kg)')),
                ('custo_materiais', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Custo de Materiais')),
                ('custo_mao_obra', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Custo de Mão de Obra')),
                ('custo_instalacao', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Custo de Instalação')),
                ('custo_producao', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Custo de Produção')),
                ('preco_venda_calculado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço de Venda Calculado')),
                ('preco_sem_impostos', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço sem Impostos')),
                ('preco_negociado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço Negociado')),
                ('preco_venda_final', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço de Venda Final')),
                ('percentual_desconto', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Desconto (%)')),
                ('ficha_tecnica', models.JSONField(blank=True, default=dict, verbose_name='Ficha Técnica')),
                ('componentes_calculados', models.JSONField(blank=True, default=dict, verbose_name='Componentes Calculados')),
                ('dimensionamento_detalhado', models.JSONField(blank=True, default=dict, verbose_name='Dimensionamento Detalhado')),
                ('explicacao_calculo', models.TextField(blank=True, verbose_name='Explicação do Cálculo')),
                ('custos_detalhados', models.JSONField(blank=True, default=dict, verbose_name='Custos Detalhados')),
                ('formacao_preco', models.JSONField(blank=True, default=dict, verbose_name='Formação de Preço')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('atualizado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='propostas_atualizadas', to=settings.AUTH_USER_MODEL)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cliente', verbose_name='Cliente')),
                ('vendedor', models.ForeignKey(limit_choices_to={'nivel': 'vendedor'}, on_delete=django.db.models.deletion.PROTECT, related_name='propostas_vendedor', to=settings.AUTH_USER_MODEL, verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Proposta',
                'verbose_name_plural': 'Propostas',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='ParcelaProposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_parcela', models.PositiveIntegerField(verbose_name='Número da Parcela')),
                ('data_vencimento', models.DateField(verbose_name='Data de Vencimento')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor da Parcela')),
                ('descricao', models.CharField(blank=True, help_text='Ex: Entrada, 1ª Parcela, etc.', max_length=100, verbose_name='Descrição')),
                ('pago', models.BooleanField(default=False, verbose_name='Pago')),
                ('data_pagamento', models.DateField(blank=True, null=True, verbose_name='Data do Pagamento')),
                ('valor_pago', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Pago')),
                ('proposta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parcelas', to='core.proposta')),
            ],
            options={
                'verbose_name': 'Parcela da Proposta',
                'verbose_name_plural': 'Parcelas das Propostas',
                'ordering': ['proposta', 'numero_parcela'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoProposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_anterior', models.CharField(blank=True, max_length=20)),
                ('status_novo', models.CharField(max_length=20)),
                ('observacao', models.TextField(blank=True)),
                ('data_mudanca', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('proposta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='core.proposta')),
            ],
            options={
                'verbose_name': 'Histórico da Proposta',
                'verbose_name_plural': 'Históricos das Propostas',
                'ordering': ['-data_mudanca'],
            },
        ),
        migrations.CreateModel(
            name='AnexoProposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Arquivo')),
                ('tipo', models.CharField(choices=[('proposta', 'Proposta Comercial'), ('orcamento', 'Orçamento'), ('demonstrativo', 'Demonstrativo de Cálculo'), ('contrato', 'Contrato'), ('projeto', 'Projeto Técnico'), ('foto', 'Foto'), ('documento', 'Documento'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo')),
                ('arquivo', models.FileField(upload_to='propostas/anexos/%Y/%m/', verbose_name='Arquivo')),
                ('tamanho', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tamanho (bytes)')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('enviado_em', models.DateTimeField(auto_now_add=True)),
                ('enviado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('proposta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='core.proposta')),
            ],
            options={
                'verbose_name': 'Anexo da Proposta',
                'verbose_name_plural': 'Anexos das Propostas',
                'ordering': ['-enviado_em'],
            },
        ),
        migrations.CreateModel(
            name='RegraComponente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Regra')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('condicoes', models.JSONField(default=dict, verbose_name='Condições')),
                ('formula_quantidade', models.TextField(blank=True, help_text="Ex: 'altura * 2 + largura' ou valor fixo como '4'", verbose_name='Fórmula Quantidade')),
                ('prioridade', models.IntegerField(default=100, verbose_name='Prioridade')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('componente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto', verbose_name='Componente')),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Regra de Componente',
                'verbose_name_plural': 'Regras de Componentes',
                'ordering': ['prioridade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='SimulacaoElevador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Projeto')),
                ('cliente_nome', models.CharField(max_length=200, verbose_name='Nome do Cliente')),
                ('cliente_contato', models.CharField(blank=True, max_length=200, verbose_name='Contato do Cliente')),
                ('especificacoes', models.JSONField(default=dict, verbose_name='Especificações')),
                ('componentes_calculados', models.JSONField(default=list, verbose_name='Componentes Calculados')),
                ('codigo_produto_gerado', models.CharField(blank=True, max_length=50, verbose_name='Código Produto')),
                ('preco_calculado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço Calculado')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('simulado', 'Simulado'), ('proposta', 'Proposta Gerada'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado')], default='rascunho', max_length=20)),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Simulação de Elevador',
                'verbose_name_plural': 'Simulações de Elevadores',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='SubgrupoProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, verbose_name='Código')),
                ('nome', models.CharField(max_length=100)),
                ('ultimo_numero', models.IntegerField(default=0, verbose_name='Último Número')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subgrupos_produtos_criados', to=settings.AUTH_USER_MODEL)),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subgrupos', to='core.grupoproduto')),
            ],
            options={
                'verbose_name': 'Subgrupo de Produto',
                'verbose_name_plural': 'Subgrupos de Produtos',
                'ordering': ['grupo__codigo', 'codigo', 'nome'],
            },
        ),
        migrations.AddField(
            model_name='produto',
            name='subgrupo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='produtos', to='core.subgrupoproduto'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['nome'], name='core_client_nome_bfa2bf_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['cpf_cnpj'], name='core_client_cpf_cnp_ea6997_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['ativo'], name='core_client_ativo_7d0832_idx'),
        ),
        migrations.AddConstraint(
            model_name='cliente',
            constraint=models.UniqueConstraint(condition=models.Q(('cpf_cnpj__isnull', False), models.Q(('cpf_cnpj', ''), _negated=True)), fields=('cpf_cnpj',), name='unique_cpf_cnpj_not_empty'),
        ),
        migrations.AlterUniqueTogether(
            name='opcaoespecificacao',
            unique_together={('especificacao', 'codigo')},
        ),
        migrations.AddIndex(
            model_name='pedidocompra',
            index=models.Index(fields=['numero'], name='core_pedido_numero_4be619_idx'),
        ),
        migrations.AddIndex(
            model_name='pedidocompra',
            index=models.Index(fields=['fornecedor', 'status'], name='core_pedido_fornece_edda83_idx'),
        ),
        migrations.AddIndex(
            model_name='pedidocompra',
            index=models.Index(fields=['data_emissao'], name='core_pedido_data_em_de9a62_idx'),
        ),
        migrations.AddIndex(
            model_name='pedidocompra',
            index=models.Index(fields=['status'], name='core_pedido_status_8b2c03_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='itempedidocompra',
            unique_together={('pedido', 'produto')},
        ),
        migrations.AlterUniqueTogether(
            name='fornecedorproduto',
            unique_together={('produto', 'fornecedor')},
        ),
        migrations.AlterUniqueTogether(
            name='estruturaproduto',
            unique_together={('produto_pai', 'produto_filho')},
        ),
        migrations.AlterUniqueTogether(
            name='componentederivado',
            unique_together={('componente_origem', 'componente_destino')},
        ),
        migrations.AddIndex(
            model_name='proposta',
            index=models.Index(fields=['numero'], name='core_propos_numero_acc30c_idx'),
        ),
        migrations.AddIndex(
            model_name='proposta',
            index=models.Index(fields=['vendedor', 'status'], name='core_propos_vendedo_7adf33_idx'),
        ),
        migrations.AddIndex(
            model_name='proposta',
            index=models.Index(fields=['cliente'], name='core_propos_cliente_1a9966_idx'),
        ),
        migrations.AddIndex(
            model_name='proposta',
            index=models.Index(fields=['-criado_em'], name='core_propos_criado__056c0a_idx'),
        ),
        migrations.AddIndex(
            model_name='proposta',
            index=models.Index(fields=['status'], name='core_propos_status_ef4ae6_idx'),
        ),
        migrations.AddIndex(
            model_name='proposta',
            index=models.Index(fields=['data_validade'], name='core_propos_data_va_1aca09_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='parcelaproposta',
            unique_together={('proposta', 'numero_parcela')},
        ),
        migrations.AlterUniqueTogether(
            name='subgrupoproduto',
            unique_together={('grupo', 'codigo')},
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['codigo'], name='core_produt_codigo_9cc5be_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['tipo', 'grupo'], name='core_produt_tipo_8c2289_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['disponivel', 'status'], name='core_produt_disponi_bc34ee_idx'),
        ),
    ]
