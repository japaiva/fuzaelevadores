# Generated by Django 5.1.7 on 2025-05-23 07:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nivel', models.CharField(choices=[('admin', 'Admin'), ('gestor', 'Gestor'), ('vendedor', 'Vendedor'), ('compras', 'Compras'), ('engenharia', 'Engenharia')], max_length=20)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('codigo_loja', models.CharField(blank=True, help_text='Código de 3 dígitos da loja', max_length=3, null=True)),
                ('codigo_vendedor', models.CharField(blank=True, help_text='Código de 3 dígitos do vendedor', max_length=3, null=True)),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EspecificacaoElevador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('tipo', models.CharField(choices=[('categoria', 'Categoria'), ('material', 'Material'), ('acabamento', 'Acabamento'), ('dimensao', 'Dimensão'), ('capacidade', 'Capacidade'), ('velocidade', 'Velocidade'), ('paradas', 'Número de Paradas'), ('opcional', 'Opcional')], max_length=20, verbose_name='Tipo')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('obrigatoria', models.BooleanField(default=True, verbose_name='Obrigatória')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem de Apresentação')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Especificação de Elevador',
                'verbose_name_plural': 'Especificações de Elevadores',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(max_length=200)),
                ('nome_fantasia', models.CharField(blank=True, max_length=200)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True)),
                ('contato_principal', models.CharField(blank=True, max_length=100)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('endereco', models.JSONField(blank=True, default=dict)),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'ordering': ['razao_social'],
            },
        ),
        migrations.CreateModel(
            name='GrupoProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True, verbose_name='Código')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True)),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grupo de Produto',
                'verbose_name_plural': 'Grupos de Produtos',
                'ordering': ['codigo', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('nivel', models.CharField(choices=[('admin', 'Admin'), ('gestor', 'Gestor'), ('vendedor', 'Vendedor'), ('compras', 'Compras'), ('engenharia', 'Engenharia')], default='vendedor', max_length=20)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('MP', 'Matéria Prima'), ('PI', 'Produto Intermediário'), ('PA', 'Produto Acabado')], max_length=2, verbose_name='Tipo')),
                ('especificacoes_tecnicas', models.JSONField(blank=True, default=dict, help_text='Especificações técnicas em formato flexível', verbose_name='Especificações Técnicas')),
                ('unidade_medida', models.CharField(choices=[('UN', 'Unidade'), ('KG', 'Quilograma'), ('MT', 'Metro'), ('M2', 'Metro Quadrado'), ('M3', 'Metro Cúbico'), ('PC', 'Peça'), ('CJ', 'Conjunto')], max_length=3, verbose_name='Unidade')),
                ('peso_unitario', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Peso (kg)')),
                ('dimensoes', models.JSONField(blank=True, default=dict, help_text='Dimensões: altura, largura, profundidade, diâmetro, etc.')),
                ('controla_estoque', models.BooleanField(default=True, verbose_name='Controla Estoque')),
                ('estoque_minimo', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Estoque Mínimo')),
                ('estoque_atual', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Estoque Atual')),
                ('custo_medio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Custo Médio')),
                ('preco_venda', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preço Venda')),
                ('margem_padrao', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Margem Padrão (%)')),
                ('prazo_entrega_padrao', models.IntegerField(blank=True, null=True, verbose_name='Prazo Entrega (dias)')),
                ('status', models.CharField(choices=[('ATIVO', 'Ativo'), ('INATIVO', 'Inativo'), ('DESCONTINUADO', 'Descontinuado')], default='ATIVO', max_length=15)),
                ('disponivel', models.BooleanField(default=True, verbose_name='Disponível para Uso')),
                ('motivo_indisponibilidade', models.TextField(blank=True, verbose_name='Motivo Indisponibilidade')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('atualizado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='produtos_atualizados', to=settings.AUTH_USER_MODEL)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='produtos_criados', to=settings.AUTH_USER_MODEL)),
                ('fornecedor_principal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.fornecedor')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.grupoproduto', verbose_name='Grupo')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='RegraComponente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Regra')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('condicoes', models.JSONField(default=dict, verbose_name='Condições')),
                ('formula_quantidade', models.TextField(blank=True, help_text="Ex: 'altura * 2 + largura' ou valor fixo como '4'", verbose_name='Fórmula Quantidade')),
                ('prioridade', models.IntegerField(default=100, verbose_name='Prioridade')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('componente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto', verbose_name='Componente')),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Regra de Componente',
                'verbose_name_plural': 'Regras de Componentes',
                'ordering': ['prioridade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='SimulacaoElevador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Projeto')),
                ('cliente_nome', models.CharField(max_length=200, verbose_name='Nome do Cliente')),
                ('cliente_contato', models.CharField(blank=True, max_length=200, verbose_name='Contato do Cliente')),
                ('especificacoes', models.JSONField(default=dict, verbose_name='Especificações')),
                ('componentes_calculados', models.JSONField(default=list, verbose_name='Componentes Calculados')),
                ('codigo_produto_gerado', models.CharField(blank=True, max_length=50, verbose_name='Código Produto')),
                ('preco_calculado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço Calculado')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('simulado', 'Simulado'), ('proposta', 'Proposta Gerada'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado')], default='rascunho', max_length=20)),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Simulação de Elevador',
                'verbose_name_plural': 'Simulações de Elevadores',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='SubgrupoProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, verbose_name='Código')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True)),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subgrupos', to='core.grupoproduto')),
            ],
            options={
                'verbose_name': 'Subgrupo de Produto',
                'verbose_name_plural': 'Subgrupos de Produtos',
                'ordering': ['grupo__codigo', 'codigo', 'nome'],
                'unique_together': {('grupo', 'codigo')},
            },
        ),
        migrations.AddField(
            model_name='produto',
            name='subgrupo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.subgrupoproduto'),
        ),
        migrations.CreateModel(
            name='OpcaoEspecificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, verbose_name='Código')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('valor_numerico', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Numérico')),
                ('unidade', models.CharField(blank=True, max_length=10, verbose_name='Unidade')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('motivo_bloqueio', models.TextField(blank=True, verbose_name='Motivo do Bloqueio')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('especificacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opcoes', to='core.especificacaoelevador')),
            ],
            options={
                'verbose_name': 'Opção de Especificação',
                'verbose_name_plural': 'Opções de Especificações',
                'ordering': ['especificacao__ordem', 'ordem', 'nome'],
                'unique_together': {('especificacao', 'codigo')},
            },
        ),
        migrations.CreateModel(
            name='EstruturaProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='Quantidade')),
                ('unidade', models.CharField(choices=[('UN', 'Unidade'), ('KG', 'Quilograma'), ('MT', 'Metro'), ('M2', 'Metro Quadrado'), ('M3', 'Metro Cúbico'), ('PC', 'Peça'), ('CJ', 'Conjunto')], max_length=3)),
                ('formula_quantidade', models.TextField(blank=True, help_text="Fórmula para cálculo dinâmico da quantidade (ex: 'altura * 2 + 0.5')")),
                ('percentual_perda', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='% Perda')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('produto_filho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usado_em', to='core.produto')),
                ('produto_pai', models.ForeignKey(limit_choices_to={'tipo__in': ['PI', 'PA']}, on_delete=django.db.models.deletion.CASCADE, related_name='componentes', to='core.produto')),
            ],
            options={
                'verbose_name': 'Estrutura do Produto',
                'verbose_name_plural': 'Estruturas dos Produtos',
                'unique_together': {('produto_pai', 'produto_filho')},
            },
        ),
        migrations.CreateModel(
            name='ComponenteDerivado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_calculo', models.CharField(choices=[('proporcional', 'Proporcional'), ('fixo', 'Valor Fixo'), ('formula', 'Fórmula')], default='proporcional', max_length=20)),
                ('multiplicador', models.DecimalField(decimal_places=4, default=1.0, max_digits=10, verbose_name='Multiplicador')),
                ('formula', models.TextField(blank=True, verbose_name='Fórmula Personalizada')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('componente_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='origem_derivacao', to='core.produto', verbose_name='Componente Destino')),
                ('componente_origem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='derivados', to='core.produto', verbose_name='Componente Origem')),
            ],
            options={
                'verbose_name': 'Componente Derivado',
                'verbose_name_plural': 'Componentes Derivados',
                'unique_together': {('componente_origem', 'componente_destino')},
            },
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['codigo'], name='core_produt_codigo_9cc5be_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['tipo', 'grupo'], name='core_produt_tipo_8c2289_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['disponivel', 'status'], name='core_produt_disponi_bc34ee_idx'),
        ),
    ]
