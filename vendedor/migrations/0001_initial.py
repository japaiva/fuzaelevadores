# Generated by Django 5.1.7 on 2025-05-23 14:02

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0003_cliente'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número do Pedido')),
                ('nome_projeto', models.CharField(max_length=200, verbose_name='Nome do Projeto')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('simulado', 'Simulado'), ('orcamento_gerado', 'Orçamento Gerado'), ('enviado_cliente', 'Enviado ao Cliente'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('em_producao', 'Em Produção'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='rascunho', max_length=20)),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('modelo_elevador', models.CharField(choices=[('Passageiro', 'Passageiro'), ('Carga', 'Carga'), ('Monta Prato', 'Monta Prato'), ('Plataforma Acessibilidade', 'Plataforma Acessibilidade')], max_length=50, verbose_name='Modelo do Elevador')),
                ('capacidade', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Capacidade (kg)')),
                ('capacidade_pessoas', models.IntegerField(blank=True, null=True, verbose_name='Capacidade (pessoas)')),
                ('acionamento', models.CharField(choices=[('Motor', 'Motor'), ('Hidraulico', 'Hidráulico'), ('Carretel', 'Carretel')], max_length=20, verbose_name='Acionamento')),
                ('tracao', models.CharField(blank=True, choices=[('1x1', '1x1'), ('2x1', '2x1')], max_length=10, verbose_name='Tração')),
                ('contrapeso', models.CharField(blank=True, choices=[('Traseiro', 'Traseiro'), ('Lateral', 'Lateral')], max_length=20, verbose_name='Contrapeso')),
                ('largura_poco', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Largura do Poço (m)')),
                ('comprimento_poco', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Comprimento do Poço (m)')),
                ('altura_poco', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Altura do Poço (m)')),
                ('pavimentos', models.IntegerField(verbose_name='Número de Pavimentos')),
                ('modelo_porta_cabine', models.CharField(choices=[('Automática', 'Automática'), ('Pantográfica', 'Pantográfica'), ('Pivotante', 'Pivotante'), ('Guilhotina', 'Guilhotina'), ('Camarão', 'Camarão'), ('Cancela', 'Cancela'), ('Rampa', 'Rampa')], max_length=20, verbose_name='Modelo Porta Cabine')),
                ('material_porta_cabine', models.CharField(choices=[('Inox', 'Inox'), ('Chapa Pintada', 'Chapa Pintada'), ('Alumínio', 'Alumínio'), ('Outro', 'Outro')], max_length=50, verbose_name='Material Porta Cabine')),
                ('material_porta_cabine_outro', models.CharField(blank=True, max_length=100, verbose_name='Material Porta Cabine (Outro)')),
                ('valor_porta_cabine_outro', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Material Porta Cabine (Outro)')),
                ('folhas_porta_cabine', models.CharField(blank=True, choices=[('2', '2'), ('3', '3'), ('Central', 'Central')], max_length=10, verbose_name='Folhas Porta Cabine')),
                ('largura_porta_cabine', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Largura Porta Cabine (m)')),
                ('altura_porta_cabine', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Altura Porta Cabine (m)')),
                ('modelo_porta_pavimento', models.CharField(choices=[('Automática', 'Automática'), ('Pantográfica', 'Pantográfica'), ('Pivotante', 'Pivotante'), ('Guilhotina', 'Guilhotina'), ('Camarão', 'Camarão'), ('Cancela', 'Cancela'), ('Rampa', 'Rampa')], max_length=20, verbose_name='Modelo Porta Pavimento')),
                ('material_porta_pavimento', models.CharField(choices=[('Inox', 'Inox'), ('Chapa Pintada', 'Chapa Pintada'), ('Alumínio', 'Alumínio'), ('Outro', 'Outro')], max_length=50, verbose_name='Material Porta Pavimento')),
                ('material_porta_pavimento_outro', models.CharField(blank=True, max_length=100, verbose_name='Material Porta Pavimento (Outro)')),
                ('valor_porta_pavimento_outro', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Material Porta Pavimento (Outro)')),
                ('folhas_porta_pavimento', models.CharField(blank=True, choices=[('2', '2'), ('3', '3'), ('Central', 'Central')], max_length=10, verbose_name='Folhas Porta Pavimento')),
                ('largura_porta_pavimento', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Largura Porta Pavimento (m)')),
                ('altura_porta_pavimento', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Altura Porta Pavimento (m)')),
                ('material_cabine', models.CharField(choices=[('Inox 430', 'Inox 430'), ('Inox 304', 'Inox 304'), ('Chapa Pintada', 'Chapa Pintada'), ('Alumínio', 'Alumínio'), ('Outro', 'Outro')], max_length=50, verbose_name='Material da Cabine')),
                ('material_cabine_outro', models.CharField(blank=True, max_length=100, verbose_name='Material da Cabine (Outro)')),
                ('valor_cabine_outro', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Material da Cabine (Outro)')),
                ('espessura_cabine', models.CharField(choices=[('1,2', '1,2 mm'), ('1,5', '1,5 mm'), ('2,0', '2,0 mm')], max_length=10, verbose_name='Espessura')),
                ('saida_cabine', models.CharField(choices=[('Padrão', 'Padrão'), ('Oposta', 'Oposta')], max_length=20, verbose_name='Saída')),
                ('altura_cabine', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Altura da Cabine (m)')),
                ('piso_cabine', models.CharField(choices=[('Por conta do cliente', 'Por conta do cliente'), ('Por conta da empresa', 'Por conta da empresa')], max_length=50, verbose_name='Piso')),
                ('material_piso_cabine', models.CharField(blank=True, choices=[('Antiderrapante', 'Antiderrapante'), ('Outro', 'Outro')], max_length=50, verbose_name='Material do Piso')),
                ('material_piso_cabine_outro', models.CharField(blank=True, max_length=100, verbose_name='Material do Piso (Outro)')),
                ('valor_piso_cabine_outro', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Material do Piso (Outro)')),
                ('faturado_por', models.CharField(choices=[('Elevadores', 'Elevadores'), ('Fuza', 'Fuza'), ('Manutenção', 'Manutenção')], default='Elevadores', max_length=20, verbose_name='Faturado por')),
                ('largura_cabine_calculada', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Largura Cabine Calculada (m)')),
                ('comprimento_cabine_calculado', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Comprimento Cabine Calculado (m)')),
                ('capacidade_cabine_calculada', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Capacidade Cabine Calculada (kg)')),
                ('tracao_cabine_calculada', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tração Cabine Calculada (kg)')),
                ('componentes_calculados', models.JSONField(blank=True, default=dict, verbose_name='Componentes Calculados')),
                ('dimensionamento_detalhado', models.JSONField(blank=True, default=dict, verbose_name='Dimensionamento Detalhado')),
                ('explicacao_calculo', models.TextField(blank=True, verbose_name='Explicação do Cálculo')),
                ('custo_producao', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Custo de Produção')),
                ('preco_venda_calculado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço de Venda Calculado')),
                ('preco_venda_final', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço de Venda Final')),
                ('percentual_desconto', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Desconto (%)')),
                ('formacao_preco', models.JSONField(blank=True, default=dict, verbose_name='Formação de Preço')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('atualizado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pedidos_atualizados', to=settings.AUTH_USER_MODEL)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cliente', verbose_name='Cliente')),
                ('vendedor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pedidos_vendedor', to=settings.AUTH_USER_MODEL, verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_anterior', models.CharField(blank=True, max_length=20)),
                ('status_novo', models.CharField(max_length=20)),
                ('observacao', models.TextField(blank=True)),
                ('data_mudanca', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='vendedor.pedido')),
            ],
            options={
                'verbose_name': 'Histórico do Pedido',
                'verbose_name_plural': 'Históricos dos Pedidos',
                'ordering': ['-data_mudanca'],
            },
        ),
        migrations.CreateModel(
            name='AnexoPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Arquivo')),
                ('tipo', models.CharField(choices=[('orcamento', 'Orçamento'), ('demonstrativo', 'Demonstrativo de Cálculo'), ('contrato', 'Contrato'), ('projeto', 'Projeto Técnico'), ('foto', 'Foto'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo')),
                ('arquivo', models.FileField(upload_to='pedidos/anexos/%Y/%m/', verbose_name='Arquivo')),
                ('tamanho', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tamanho (bytes)')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('enviado_em', models.DateTimeField(auto_now_add=True)),
                ('enviado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='vendedor.pedido')),
            ],
            options={
                'verbose_name': 'Anexo do Pedido',
                'verbose_name_plural': 'Anexos dos Pedidos',
                'ordering': ['-enviado_em'],
            },
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['numero'], name='vendedor_pe_numero_b0abb0_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['vendedor', 'status'], name='vendedor_pe_vendedo_65a5e9_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['cliente'], name='vendedor_pe_cliente_6a4446_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['-criado_em'], name='vendedor_pe_criado__58119a_idx'),
        ),
    ]
